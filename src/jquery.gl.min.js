var Sylvester={version:"0.1.3",precision:1.0E-6};function Vector(){}
Vector.prototype={e:function(a){return a<1||a>this.elements.length?null:this.elements[a-1]},dimensions:function(){return this.elements.length},modulus:function(){return Math.sqrt(this.dot(this))},eql:function(a){var b=this.elements.length,a=a.elements||a;if(b!=a.length)return!1;do if(Math.abs(this.elements[b-1]-a[b-1])>Sylvester.precision)return!1;while(--b);return!0},dup:function(){return Vector.create(this.elements)},map:function(a){var b=[];this.each(function(c,d){b.push(a(c,d))});return Vector.create(b)},
each:function(a){var b=this.elements.length,c=b,d;do d=c-b,a(this.elements[d],d+1);while(--b)},toUnitVector:function(){var a=this.modulus();return a===0?this.dup():this.map(function(b){return b/a})},angleFrom:function(a){var b=a.elements||a;if(this.elements.length!=b.length)return null;var c=0,d=0,e=0;this.each(function(a,g){c+=a*b[g-1];d+=a*a;e+=b[g-1]*b[g-1]});d=Math.sqrt(d);e=Math.sqrt(e);if(d*e===0)return null;a=c/(d*e);a<-1&&(a=-1);a>1&&(a=1);return Math.acos(a)},isParallelTo:function(a){a=this.angleFrom(a);
return a===null?null:a<=Sylvester.precision},isAntiparallelTo:function(a){a=this.angleFrom(a);return a===null?null:Math.abs(a-Math.PI)<=Sylvester.precision},isPerpendicularTo:function(a){a=this.dot(a);return a===null?null:Math.abs(a)<=Sylvester.precision},add:function(a){var b=a.elements||a;return this.elements.length!=b.length?null:this.map(function(a,d){return a+b[d-1]})},subtract:function(a){var b=a.elements||a;return this.elements.length!=b.length?null:this.map(function(a,d){return a-b[d-1]})},
multiply:function(a){return this.map(function(b){return b*a})},x:function(a){return this.multiply(a)},dot:function(a){var a=a.elements||a,b=0,c=this.elements.length;if(c!=a.length)return null;do b+=this.elements[c-1]*a[c-1];while(--c);return b},cross:function(a){a=a.elements||a;if(this.elements.length!=3||a.length!=3)return null;var b=this.elements;return Vector.create([b[1]*a[2]-b[2]*a[1],b[2]*a[0]-b[0]*a[2],b[0]*a[1]-b[1]*a[0]])},max:function(){var a=0,b=this.elements.length,c=b,d;do d=c-b,Math.abs(this.elements[d])>
Math.abs(a)&&(a=this.elements[d]);while(--b);return a},indexOf:function(a){var b=null,c=this.elements.length,d=c,e;do e=d-c,b===null&&this.elements[e]==a&&(b=e+1);while(--c);return b},toDiagonalMatrix:function(){return Matrix.Diagonal(this.elements)},round:function(){return this.map(function(a){return Math.round(a)})},snapTo:function(a){return this.map(function(b){return Math.abs(b-a)<=Sylvester.precision?a:b})},distanceFrom:function(a){if(a.anchor)return a.distanceFrom(this);var b=a.elements||a;
if(b.length!=this.elements.length)return null;var c=0,d;this.each(function(a,f){d=a-b[f-1];c+=d*d});return Math.sqrt(c)},liesOn:function(a){return a.contains(this)},liesIn:function(a){return a.contains(this)},rotate:function(a,b){var c,d,e,f;switch(this.elements.length){case 2:c=b.elements||b;if(c.length!=2)return null;d=Matrix.Rotation(a).elements;e=this.elements[0]-c[0];f=this.elements[1]-c[1];return Vector.create([c[0]+d[0][0]*e+d[0][1]*f,c[1]+d[1][0]*e+d[1][1]*f]);case 3:if(!b.direction)return null;
var g=b.pointClosestTo(this).elements;d=Matrix.Rotation(a,b.direction).elements;e=this.elements[0]-g[0];f=this.elements[1]-g[1];c=this.elements[2]-g[2];return Vector.create([g[0]+d[0][0]*e+d[0][1]*f+d[0][2]*c,g[1]+d[1][0]*e+d[1][1]*f+d[1][2]*c,g[2]+d[2][0]*e+d[2][1]*f+d[2][2]*c]);default:return null}},reflectionIn:function(a){if(a.anchor){var b=this.elements.slice(),a=a.pointClosestTo(b).elements;return Vector.create([a[0]+(a[0]-b[0]),a[1]+(a[1]-b[1]),a[2]+(a[2]-(b[2]||0))])}else{var c=a.elements||
a;return this.elements.length!=c.length?null:this.map(function(a,b){return c[b-1]+(c[b-1]-a)})}},to3D:function(){var a=this.dup();switch(a.elements.length){case 3:break;case 2:a.elements.push(0);break;default:return null}return a},inspect:function(){return"["+this.elements.join(", ")+"]"},setElements:function(a){this.elements=(a.elements||a).slice();return this}};Vector.create=function(a){return(new Vector).setElements(a)};Vector.i=Vector.create([1,0,0]);Vector.j=Vector.create([0,1,0]);
Vector.k=Vector.create([0,0,1]);Vector.Random=function(a){var b=[];do b.push(Math.random());while(--a);return Vector.create(b)};Vector.Zero=function(a){var b=[];do b.push(0);while(--a);return Vector.create(b)};function Matrix(){}
Matrix.prototype={e:function(a,b){return a<1||a>this.elements.length||b<1||b>this.elements[0].length?null:this.elements[a-1][b-1]},row:function(a){return a>this.elements.length?null:Vector.create(this.elements[a-1])},col:function(a){if(a>this.elements[0].length)return null;var b=[],c=this.elements.length,d=c,e;do e=d-c,b.push(this.elements[e][a-1]);while(--c);return Vector.create(b)},dimensions:function(){return{rows:this.elements.length,cols:this.elements[0].length}},rows:function(){return this.elements.length},
cols:function(){return this.elements[0].length},eql:function(a){a=a.elements||a;if(typeof a[0][0]=="undefined")a=Matrix.create(a).elements;if(this.elements.length!=a.length||this.elements[0].length!=a[0].length)return!1;var b=this.elements.length,c=b,d,e,f=this.elements[0].length,g;do{d=c-b;e=f;do if(g=f-e,Math.abs(this.elements[d][g]-a[d][g])>Sylvester.precision)return!1;while(--e)}while(--b);return!0},dup:function(){return Matrix.create(this.elements)},map:function(a){var b=[],c=this.elements.length,
d=c,e,f,g=this.elements[0].length,h;do{e=d-c;f=g;b[e]=[];do h=g-f,b[e][h]=a(this.elements[e][h],e+1,h+1);while(--f)}while(--c);return Matrix.create(b)},isSameSizeAs:function(a){a=a.elements||a;if(typeof a[0][0]=="undefined")a=Matrix.create(a).elements;return this.elements.length==a.length&&this.elements[0].length==a[0].length},add:function(a){var b=a.elements||a;if(typeof b[0][0]=="undefined")b=Matrix.create(b).elements;return!this.isSameSizeAs(b)?null:this.map(function(a,d,e){return a+b[d-1][e-1]})},
subtract:function(a){var b=a.elements||a;if(typeof b[0][0]=="undefined")b=Matrix.create(b).elements;return!this.isSameSizeAs(b)?null:this.map(function(a,d,e){return a-b[d-1][e-1]})},canMultiplyFromLeft:function(a){a=a.elements||a;if(typeof a[0][0]=="undefined")a=Matrix.create(a).elements;return this.elements[0].length==a.length},multiply:function(a){if(!a.elements)return this.map(function(b){return b*a});var b=a.modulus?!0:!1,c=a.elements||a;if(typeof c[0][0]=="undefined")c=Matrix.create(c).elements;
if(!this.canMultiplyFromLeft(c))return null;var d=this.elements.length,e=d,f,g,h=c[0].length,k,m=this.elements[0].length,n=[],o,p,q;do{f=e-d;n[f]=[];g=h;do{k=h-g;o=0;p=m;do q=m-p,o+=this.elements[f][q]*c[q][k];while(--p);n[f][k]=o}while(--g)}while(--d);c=Matrix.create(n);return b?c.col(1):c},x:function(a){return this.multiply(a)},minor:function(a,b,c,d){var e=[],f=c,g,h,k,m=this.elements.length,n=this.elements[0].length;do{g=c-f;e[g]=[];h=d;do k=d-h,e[g][k]=this.elements[(a+g-1)%m][(b+k-1)%n];while(--h)}while(--f);
return Matrix.create(e)},transpose:function(){var a=this.elements.length,b=this.elements[0].length,c=[],d=b,e,f,g;do{e=b-d;c[e]=[];f=a;do g=a-f,c[e][g]=this.elements[g][e];while(--f)}while(--d);return Matrix.create(c)},isSquare:function(){return this.elements.length==this.elements[0].length},max:function(){var a=0,b=this.elements.length,c=b,d,e,f=this.elements[0].length,g;do{d=c-b;e=f;do g=f-e,Math.abs(this.elements[d][g])>Math.abs(a)&&(a=this.elements[d][g]);while(--e)}while(--b);return a},indexOf:function(a){var b=
this.elements.length,c=b,d,e,f=this.elements[0].length,g;do{d=c-b;e=f;do if(g=f-e,this.elements[d][g]==a)return{i:d+1,j:g+1};while(--e)}while(--b);return null},diagonal:function(){if(!this.isSquare)return null;var a=[],b=this.elements.length,c=b,d;do d=c-b,a.push(this.elements[d][d]);while(--b);return Vector.create(a)},toRightTriangular:function(){var a=this.dup(),b,c=this.elements.length,d=c,e,f,g=this.elements[0].length,h;do{e=d-c;if(a.elements[e][e]==0)for(j=e+1;j<d;j++)if(a.elements[j][e]!=0){b=
[];f=g;do h=g-f,b.push(a.elements[e][h]+a.elements[j][h]);while(--f);a.elements[e]=b;break}if(a.elements[e][e]!=0)for(j=e+1;j<d;j++){var k=a.elements[j][e]/a.elements[e][e];b=[];f=g;do h=g-f,b.push(h<=e?0:a.elements[j][h]-a.elements[e][h]*k);while(--f);a.elements[j]=b}}while(--c);return a},toUpperTriangular:function(){return this.toRightTriangular()},determinant:function(){if(!this.isSquare())return null;var a=this.toRightTriangular(),b=a.elements[0][0],c=a.elements.length-1,d=c,e;do e=d-c+1,b*=a.elements[e][e];
while(--c);return b},det:function(){return this.determinant()},isSingular:function(){return this.isSquare()&&this.determinant()===0},trace:function(){if(!this.isSquare())return null;var a=this.elements[0][0],b=this.elements.length-1,c=b,d;do d=c-b+1,a+=this.elements[d][d];while(--b);return a},tr:function(){return this.trace()},rank:function(){var a=this.toRightTriangular(),b=0,c=this.elements.length,d=c,e,f,g=this.elements[0].length,h;do{e=d-c;f=g;do if(h=g-f,Math.abs(a.elements[e][h])>Sylvester.precision){b++;
break}while(--f)}while(--c);return b},rk:function(){return this.rank()},augment:function(a){a=a.elements||a;if(typeof a[0][0]=="undefined")a=Matrix.create(a).elements;var b=this.dup(),c=b.elements[0].length,d=b.elements.length,e=d,f,g,h=a[0].length,k;if(d!=a.length)return null;do{f=e-d;g=h;do k=h-g,b.elements[f][c+k]=a[f][k];while(--g)}while(--d);return b},inverse:function(){if(!this.isSquare()||this.isSingular())return null;var a=this.elements.length,b=a,c,d,e=this.augment(Matrix.I(a)).toRightTriangular(),
f,g=e.elements[0].length,h,k,m=[],n;do{c=a-1;k=[];f=g;m[c]=[];d=e.elements[c][c];do h=g-f,n=e.elements[c][h]/d,k.push(n),h>=b&&m[c].push(n);while(--f);e.elements[c]=k;for(d=0;d<c;d++){k=[];f=g;do h=g-f,k.push(e.elements[d][h]-e.elements[c][h]*e.elements[d][c]);while(--f);e.elements[d]=k}}while(--a);return Matrix.create(m)},inv:function(){return this.inverse()},round:function(){return this.map(function(a){return Math.round(a)})},snapTo:function(a){return this.map(function(b){return Math.abs(b-a)<=
Sylvester.precision?a:b})},inspect:function(){var a=[],b=this.elements.length,c=b,d;do d=c-b,a.push(Vector.create(this.elements[d]).inspect());while(--b);return a.join("\n")},setElements:function(a){var b=a.elements||a;if(typeof b[0][0]!="undefined"){var c=b.length,d=c,e,f,g;this.elements=[];do{a=d-c;f=e=b[a].length;this.elements[a]=[];do g=f-e,this.elements[a][g]=b[a][g];while(--e)}while(--c);return this}d=c=b.length;this.elements=[];do a=d-c,this.elements.push([b[a]]);while(--c);return this}};
Matrix.create=function(a){return(new Matrix).setElements(a)};Matrix.I=function(a){var b=[],c=a,d,e,f;do{d=c-a;b[d]=[];e=c;do f=c-e,b[d][f]=d==f?1:0;while(--e)}while(--a);return Matrix.create(b)};Matrix.Diagonal=function(a){var b=a.length,c=b,d,e=Matrix.I(b);do d=c-b,e.elements[d][d]=a[d];while(--b);return e};
Matrix.Rotation=function(a,b){if(!b)return Matrix.create([[Math.cos(a),-Math.sin(a)],[Math.sin(a),Math.cos(a)]]);var c=b.dup();if(c.elements.length!=3)return null;var d=c.modulus(),e=c.elements[0]/d,f=c.elements[1]/d,c=c.elements[2]/d,d=Math.sin(a),g=Math.cos(a),h=1-g;return Matrix.create([[h*e*e+g,h*e*f-d*c,h*e*c+d*f],[h*e*f+d*c,h*f*f+g,h*f*c-d*e],[h*e*c-d*f,h*f*c+d*e,h*c*c+g]])};Matrix.RotationX=function(a){var b=Math.cos(a),a=Math.sin(a);return Matrix.create([[1,0,0],[0,b,-a],[0,a,b]])};
Matrix.RotationY=function(a){var b=Math.cos(a),a=Math.sin(a);return Matrix.create([[b,0,a],[0,1,0],[-a,0,b]])};Matrix.RotationZ=function(a){var b=Math.cos(a),a=Math.sin(a);return Matrix.create([[b,-a,0],[a,b,0],[0,0,1]])};Matrix.Random=function(a,b){return Matrix.Zero(a,b).map(function(){return Math.random()})};Matrix.Zero=function(a,b){var c=[],d=a,e,f,g;do{e=a-d;c[e]=[];f=b;do g=b-f,c[e][g]=0;while(--f)}while(--d);return Matrix.create(c)};function Line(){}
Line.prototype={eql:function(a){return this.isParallelTo(a)&&this.contains(a.anchor)},dup:function(){return Line.create(this.anchor,this.direction)},translate:function(a){a=a.elements||a;return Line.create([this.anchor.elements[0]+a[0],this.anchor.elements[1]+a[1],this.anchor.elements[2]+(a[2]||0)],this.direction)},isParallelTo:function(a){if(a.normal)return a.isParallelTo(this);a=this.direction.angleFrom(a.direction);return Math.abs(a)<=Sylvester.precision||Math.abs(a-Math.PI)<=Sylvester.precision},
distanceFrom:function(a){if(a.normal)return a.distanceFrom(this);if(a.direction){if(this.isParallelTo(a))return this.distanceFrom(a.anchor);var b=this.direction.cross(a.direction).toUnitVector().elements,c=this.anchor.elements,a=a.anchor.elements;return Math.abs((c[0]-a[0])*b[0]+(c[1]-a[1])*b[1]+(c[2]-a[2])*b[2])}else{var d=a.elements||a,c=this.anchor.elements,b=this.direction.elements,a=d[0]-c[0],e=d[1]-c[1],d=(d[2]||0)-c[2],c=Math.sqrt(a*a+e*e+d*d);if(c===0)return 0;b=(a*b[0]+e*b[1]+d*b[2])/c;b=
1-b*b;return Math.abs(c*Math.sqrt(b<0?0:b))}},contains:function(a){a=this.distanceFrom(a);return a!==null&&a<=Sylvester.precision},liesIn:function(a){return a.contains(this)},intersects:function(a){return a.normal?a.intersects(this):!this.isParallelTo(a)&&this.distanceFrom(a)<=Sylvester.precision},intersectionWith:function(a){if(a.normal)return a.intersectionWith(this);if(!this.intersects(a))return null;var b=this.anchor.elements,c=this.direction.elements,d=a.anchor.elements,e=a.direction.elements,
a=c[0],f=c[1],c=c[2],g=e[0],h=e[1],e=e[2],k=b[0]-d[0],m=b[1]-d[1],d=b[2]-d[2],n=g*g+h*h+e*e,o=a*g+f*h+c*e,g=((-a*k-f*m-c*d)*n/(a*a+f*f+c*c)+o*(g*k+h*m+e*d))/(n-o*o);return Vector.create([b[0]+g*a,b[1]+g*f,b[2]+g*c])},pointClosestTo:function(a){if(a.direction){if(this.intersects(a))return this.intersectionWith(a);if(this.isParallelTo(a))return null;var b=this.direction.elements,c=a.direction.elements,d=b[0],e=b[1],b=b[2],f=c[0],g=c[1],h=c[2],c=b*f-d*h,k=d*g-e*f,m=e*h-b*g,d=Vector.create([c*h-k*g,k*
f-m*h,m*g-c*f]),a=Plane.create(a.anchor,d);return a.intersectionWith(this)}else{a=a.elements||a;if(this.contains(a))return Vector.create(a);c=this.anchor.elements;b=this.direction.elements;d=b[0];e=b[1];b=b[2];f=c[0];k=c[1];g=c[2];c=d*(a[1]-k)-e*(a[0]-f);k=e*((a[2]||0)-g)-b*(a[1]-k);m=b*(a[0]-f)-d*((a[2]||0)-g);d=Vector.create([e*c-b*m,b*k-d*c,d*m-e*k]);e=this.distanceFrom(a)/d.modulus();return Vector.create([a[0]+d.elements[0]*e,a[1]+d.elements[1]*e,(a[2]||0)+d.elements[2]*e])}},rotate:function(a,
b){typeof b.direction=="undefined"&&(b=Line.create(b.to3D(),Vector.k));var c=Matrix.Rotation(a,b.direction).elements,d=b.pointClosestTo(this.anchor).elements,e=this.anchor.elements,f=this.direction.elements,g=d[0],h=d[1],d=d[2],k=e[0]-g,m=e[1]-h,e=e[2]-d;return Line.create([g+c[0][0]*k+c[0][1]*m+c[0][2]*e,h+c[1][0]*k+c[1][1]*m+c[1][2]*e,d+c[2][0]*k+c[2][1]*m+c[2][2]*e],[c[0][0]*f[0]+c[0][1]*f[1]+c[0][2]*f[2],c[1][0]*f[0]+c[1][1]*f[1]+c[1][2]*f[2],c[2][0]*f[0]+c[2][1]*f[1]+c[2][2]*f[2]])},reflectionIn:function(a){if(a.normal){var b=
this.anchor.elements,c=this.direction.elements,d=b[0],e=b[1],b=b[2],f=c[0],g=c[1],h=c[2],c=this.anchor.reflectionIn(a).elements;d+=f;e+=g;b+=h;a=a.pointClosestTo([d,e,b]).elements;return Line.create(c,[a[0]+(a[0]-d)-c[0],a[1]+(a[1]-e)-c[1],a[2]+(a[2]-b)-c[2]])}else return a.direction?this.rotate(Math.PI,a):(a=a.elements||a,Line.create(this.anchor.reflectionIn([a[0],a[1],a[2]||0]),this.direction))},setVectors:function(a,b){a=Vector.create(a);b=Vector.create(b);a.elements.length==2&&a.elements.push(0);
b.elements.length==2&&b.elements.push(0);if(a.elements.length>3||b.elements.length>3)return null;var c=b.modulus();if(c===0)return null;this.anchor=a;this.direction=Vector.create([b.elements[0]/c,b.elements[1]/c,b.elements[2]/c]);return this}};Line.create=function(a,b){return(new Line).setVectors(a,b)};Line.X=Line.create(Vector.Zero(3),Vector.i);Line.Y=Line.create(Vector.Zero(3),Vector.j);Line.Z=Line.create(Vector.Zero(3),Vector.k);function Plane(){}
Plane.prototype={eql:function(a){return this.contains(a.anchor)&&this.isParallelTo(a)},dup:function(){return Plane.create(this.anchor,this.normal)},translate:function(a){a=a.elements||a;return Plane.create([this.anchor.elements[0]+a[0],this.anchor.elements[1]+a[1],this.anchor.elements[2]+(a[2]||0)],this.normal)},isParallelTo:function(a){if(a.normal)return a=this.normal.angleFrom(a.normal),Math.abs(a)<=Sylvester.precision||Math.abs(Math.PI-a)<=Sylvester.precision;else if(a.direction)return this.normal.isPerpendicularTo(a.direction);
return null},isPerpendicularTo:function(a){a=this.normal.angleFrom(a.normal);return Math.abs(Math.PI/2-a)<=Sylvester.precision},distanceFrom:function(a){if(this.intersects(a)||this.contains(a))return 0;if(a.anchor){var b=this.anchor.elements,c=a.anchor.elements,a=this.normal.elements;return Math.abs((b[0]-c[0])*a[0]+(b[1]-c[1])*a[1]+(b[2]-c[2])*a[2])}else return c=a.elements||a,b=this.anchor.elements,a=this.normal.elements,Math.abs((b[0]-c[0])*a[0]+(b[1]-c[1])*a[1]+(b[2]-(c[2]||0))*a[2])},contains:function(a){if(a.normal)return null;
if(a.direction)return this.contains(a.anchor)&&this.contains(a.anchor.add(a.direction));else{var a=a.elements||a,b=this.anchor.elements,c=this.normal.elements;return Math.abs(c[0]*(b[0]-a[0])+c[1]*(b[1]-a[1])+c[2]*(b[2]-(a[2]||0)))<=Sylvester.precision}},intersects:function(a){return typeof a.direction=="undefined"&&typeof a.normal=="undefined"?null:!this.isParallelTo(a)},intersectionWith:function(a){if(!this.intersects(a))return null;if(a.direction){var b=a.anchor.elements,c=a.direction.elements,
a=this.anchor.elements,d=this.normal.elements,a=(d[0]*(a[0]-b[0])+d[1]*(a[1]-b[1])+d[2]*(a[2]-b[2]))/(d[0]*c[0]+d[1]*c[1]+d[2]*c[2]);return Vector.create([b[0]+c[0]*a,b[1]+c[1]*a,b[2]+c[2]*a])}else if(a.normal){for(var c=this.normal.cross(a.normal).toUnitVector(),d=this.normal.elements,b=this.anchor.elements,e=a.normal.elements,f=a.anchor.elements,g=Matrix.Zero(2,2),a=0;g.isSingular();)a++,g=Matrix.create([[d[a%3],d[(a+1)%3]],[e[a%3],e[(a+1)%3]]]);g=g.inverse().elements;b=d[0]*b[0]+d[1]*b[1]+d[2]*
b[2];d=e[0]*f[0]+e[1]*f[1]+e[2]*f[2];b=[g[0][0]*b+g[0][1]*d,g[1][0]*b+g[1][1]*d];d=[];for(e=1;e<=3;e++)d.push(a==e?0:b[(e+(5-a)%3)%3]);return Line.create(d,c)}},pointClosestTo:function(a){var a=a.elements||a,b=this.anchor.elements,c=this.normal.elements,b=(b[0]-a[0])*c[0]+(b[1]-a[1])*c[1]+(b[2]-(a[2]||0))*c[2];return Vector.create([a[0]+c[0]*b,a[1]+c[1]*b,(a[2]||0)+c[2]*b])},rotate:function(a,b){var c=Matrix.Rotation(a,b.direction).elements,d=b.pointClosestTo(this.anchor).elements,e=this.anchor.elements,
f=this.normal.elements,g=d[0],h=d[1],d=d[2],k=e[0]-g,m=e[1]-h,e=e[2]-d;return Plane.create([g+c[0][0]*k+c[0][1]*m+c[0][2]*e,h+c[1][0]*k+c[1][1]*m+c[1][2]*e,d+c[2][0]*k+c[2][1]*m+c[2][2]*e],[c[0][0]*f[0]+c[0][1]*f[1]+c[0][2]*f[2],c[1][0]*f[0]+c[1][1]*f[1]+c[1][2]*f[2],c[2][0]*f[0]+c[2][1]*f[1]+c[2][2]*f[2]])},reflectionIn:function(a){if(a.normal){var b=this.anchor.elements,c=this.normal.elements,d=b[0],e=b[1],b=b[2],f=c[0],g=c[1],h=c[2],c=this.anchor.reflectionIn(a).elements;d+=f;e+=g;b+=h;a=a.pointClosestTo([d,
e,b]).elements;return Plane.create(c,[a[0]+(a[0]-d)-c[0],a[1]+(a[1]-e)-c[1],a[2]+(a[2]-b)-c[2]])}else return a.direction?this.rotate(Math.PI,a):(a=a.elements||a,Plane.create(this.anchor.reflectionIn([a[0],a[1],a[2]||0]),this.normal))},setVectors:function(a,b,c){a=Vector.create(a);a=a.to3D();if(a===null)return null;b=Vector.create(b);b=b.to3D();if(b===null)return null;if(typeof c=="undefined")c=null;else if(c=Vector.create(c),c=c.to3D(),c===null)return null;var d=a.elements[0],e=a.elements[1],f=a.elements[2],
g=b.elements[0],h=b.elements[1],k=b.elements[2];if(c!==null){var b=c.elements[0],m=c.elements[1],c=c.elements[2],e=Vector.create([(h-e)*(c-f)-(k-f)*(m-e),(k-f)*(b-d)-(g-d)*(c-f),(g-d)*(m-e)-(h-e)*(b-d)]),d=e.modulus();if(d===0)return null;e=Vector.create([e.elements[0]/d,e.elements[1]/d,e.elements[2]/d])}else{d=Math.sqrt(g*g+h*h+k*k);if(d===0)return null;e=Vector.create([b.elements[0]/d,b.elements[1]/d,b.elements[2]/d])}this.anchor=a;this.normal=e;return this}};
Plane.create=function(a,b,c){return(new Plane).setVectors(a,b,c)};Plane.XY=Plane.create(Vector.Zero(3),Vector.k);Plane.YZ=Plane.create(Vector.Zero(3),Vector.i);Plane.ZX=Plane.create(Vector.Zero(3),Vector.j);Plane.YX=Plane.XY;Plane.ZY=Plane.YZ;Plane.XZ=Plane.ZX;var $V=Vector.create,$M=Matrix.create,$L=Line.create,$P=Plane.create;
(function(a){function b(a,b){a||alert("Tried to create a material with undefined shader program.");b||alert("Tried to create a material with undefined context.");this._gl=b;this.prog=a;this._uniforms={};this.DefaultMatrix={P:0,M:1}}function c(){this._stack=[];this.m=Matrix.I(4);this.p=Matrix.I(4)}function d(a,b,c,d){a||alert("Tried to create a model with undefined context.");c||alert("Tried to create a model with undefined geometry type.");d||alert("Tried to create a model with undefined length.");
this._vert_length=d;this._type=c;this._buffers=[];this._gl=a;this._material=b;if(!b)this._material=a.x.currentMaterial;b||alert("Must create a material before you can create a Model.")}function e(a){this._models=[];this._gl=a}b.prototype.addUniform=function(a,b){this._uniforms[b]=a};b.prototype.setUniforms=function(){var a=this._gl;for(name in this._uniforms){var b=this._uniforms[name];if(b==this.DefaultMatrix.M)b=a.m.m;else if(b==this.DefaultMatrix.P)b=a.m.p;var c=a.getUniformLocation(this.prog,
name);c||alert("Unable to find uniform name "+name+" in shaders.");for(var d=[],e=0;e<4;++e)for(var f=0;f<4;++f)d.push(b.elements[f][e]);a.uniformMatrix4fv(c,!1,new Float32Array(d))}};c.prototype.perspective=function(a,b,c,d,e){c=c*1/d;d=2*a*Math.tan(e*Math.PI/360);return this.p=$M([[2*a/(c*d),0,0,0],[0,2*a/d,0,0],[0,0,-(b+a)/(b-a),-2*b*a/(b-a)],[0,0,-1,0]])};c.prototype.push=function(){};c.prototype.pop=function(){};c.prototype.identity=function(){return this.m=Matrix.I(4)};c.prototype.i=function(){return this.identity()};
c.prototype.translate=function(a){for(var b=Matrix.I(4),c=0;c<a.length;++c)b.elements[c][3]=a[c];this.m=this.m.x(b);return b};d.prototype._setAttributes=function(){for(i=0;i<this._buffers.length;++i){attr=this._buffers[i].attr;buffer=this._buffers[i].buffer;l=this._buffers[i].l;var a=this._gl;a.bindBuffer(a.ARRAY_BUFFER,buffer);a.vertexAttribPointer(attr,l,a.FLOAT,!1,0,0)}};d.prototype.addAttribute=function(a,b,c){var d=this._gl;c||(c=3);d.useProgram(this._material.prog);var e=d.getAttribLocation(this._material.prog,
b);e==-1&&alert("Unable to find attribute name "+b+" in shaders.");d.enableVertexAttribArray(e);b=d.createBuffer();d.bindBuffer(d.ARRAY_BUFFER,b);d.bufferData(d.ARRAY_BUFFER,new Float32Array(a),d.STATIC_DRAW);this._buffers.push({attr:e,buffer:b,l:c})};d.prototype.draw=function(){var a=this._gl;a.useProgram(this._material.prog);this._setAttributes();this._material.setUniforms();a.drawArrays(this._type,0,this._vert_length)};var f=function(a){var b=null;try{(b=a.getContext("webgl"))||(b=a.getContext("experimental-webgl"))}catch(c){alert("Error creating webgl context: "+
c)}b||alert("Failed to create webgl context.");return b},g=function(b,c){var d=a("#"+c),e=d.text();if(!e||e=="")return alert("Unable to find source for shader: "+c),null;var d=d.attr("type"),f=null;if(d=="x-shader/x-vertex")f=b.createShader(b.VERTEX_SHADER);else if(d=="x-shader/x-fragment")f=b.createShader(b.FRAGMENT_SHADER);else return alert('Shader script must have type "x-shader/x-fragment" or "x-shader/x-vertex"'),null;b.shaderSource(f,e);b.compileShader(f);return!b.getShaderParameter(f,b.COMPILE_STATUS)?
(alert("Shader compilation failed: "+c+": "+b.getShaderInfoLog(f)),null):f};e.prototype.createModel=function(a,b,c){model=new d(this._gl,a,b,c);this._models.push(model);return model};e.prototype.createMaterial=function(a,c){var d=this._gl,e=g(d,a),f=g(d,c),h;prog=d.createProgram();d.attachShader(prog,e);d.attachShader(prog,f);d.linkProgram(prog);d.getProgramParameter(prog,d.LINK_STATUS)||alert("Shader program link failed: "+d.getProgramInfoLog(prog));(h=prog)||alert("Failed to create program: "+e+
", "+f);return this.currentMaterial=new b(h,d)};e.prototype.initDepth=function(a){a||(a=1);var b=this._gl;b.clearColor(0,0,0,1);b.clearDepth(a);b.enable(b.DEPTH_TEST);b.depthFunc(b.LEQUAL)};e.prototype.models=function(){return this._models[0]};var h=function(a){a.m=new c;a.x=new e(a)};a.fn.gl=function(a){if(this.length==0)return this;var b=this[0],c=null;b._jquery_gl?c=b._jquery_gl:(c=f(this[0]),b._jquery_gl=c);h(c);a.init&&a.init(c);a.draw&&(a.framerate&&a.framerate>0?setInterval(function(){a.draw(c)},
1E3/a.framerate):a.draw(c));return c}})(jQuery);
